name: Test

on:
  push:
  schedule:
    - cron:  "0 0 * * *"

permissions:
  id-token: write
  contents: read

jobs:
  tox:
    runs-on: ubuntu-latest

    env:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_ATHENA_S3_STAGING_DIR: ${{ secrets.AWS_ATHENA_S3_STAGING_DIR }}
      AWS_ATHENA_WORKGROUP: ${{ secrets.AWS_ATHENA_WORKGROUP }}

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          role-session-name: PyAthenaTestSession
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.2
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ${{ github.workspace }}/.poetry
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.poetry
            ${{ github.workspace }}/.tox
          key: venv-${{ github.workflow }}-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock', '**/tox.ini') }}
      - name: Install dependencies
        # Raises FileNotFoundError when using cache.
        # [Errno 2] No such file or directory: b'/snap/bin/tox'
        # if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Test with tox
        run: |
          poetry run tox
